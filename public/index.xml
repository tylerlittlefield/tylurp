<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tyler littlefield</title>
    <link>/</link>
    <description>Recent content on tyler littlefield</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Iteration the Easy Way</title>
      <link>/post/iteration/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/iteration/</guid>
      <description>I do not come from a computer science background but my guess is that base R’s apply family of functions stand out as something strange. This strangeness might be because for loops are explicit and make it clear what’s going on, so why obfuscate the logic?
But on the other hand, I think you could argue that while the logic might be clear, the intent isn’t, at least not immediately.</description>
    </item>
    
    <item>
      <title>My First CRAN Package</title>
      <link>/post/my-first-cran-package/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-cran-package/</guid>
      <description>Thanks, your package is on its way to CRAN.
 Introduction I am really excited to announce (12 days late) that lisa is on CRAN, my first R package available on the Comprehensive R Archive Network! This was a pretty big deal for me because I have wanted to submit something to CRAN for a couple of years now.
Anyway, lisa is a color palette pacakge, it provides R users with 128 color palettes based on artwork from the worlds greatest artists.</description>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>/showcase/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/showcase/</guid>
      <description>Header 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. Donec quis dolor nec nunc mollis interdum vel in purus. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.</description>
    </item>
    
    <item>
      <title>Testing Equality of Multiple Expressions</title>
      <link>/post/testing-equality-of-multiple-expressions/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/testing-equality-of-multiple-expressions/</guid>
      <description>Credit to BrodieG: https://stackoverflow.com/questions/27325005
This post is essentially an extension of a previous post I wrote. The only addition is a cool idea for testing near equality of outputs. I’m calling this an “equality matrix”, a matrix of methods that displays whether or not they are equal to each other. One use case is benchmarking. As we benchmark multiple solutions to a single problem, testing whether or not the outputs are equal becomes more time consuming as the all.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>My name is Tyler Littlefield. I typically write about R programming here. If I&amp;rsquo;m feeling adventurous I may write something unrelated to R.
I&amp;rsquo;m a hobbyist programmer interested in data analysis, data visualization, and building #rstats tools.
In college, most of my work involved spatial data problems using point and click GIS software like QGIS or ArcGIS. Towards the end of my senior year I took a class on geographic data science using R and found this language to be very intuitive for reasons that are beyond me.</description>
    </item>
    
    <item>
      <title>Reproducibility</title>
      <link>/post/reproducibility/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/reproducibility/</guid>
      <description>Welcome to SO. In order to answer your question, please provide a minimal, complete, and verifiable example.
 If you&amp;rsquo;ve ever asked a question on Stack Overflow (SO), you may recognize the quote above. This is because reproducibility is incredibly important when asking programming questions and it&amp;rsquo;s often overlooked. To be brief, a great reproducible example should be:
 Minimal &amp;ndash; Provide the least amount of code needed to reproduce the problem.</description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archive/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>